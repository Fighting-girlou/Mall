{"remainingRequest":"/Users/yuzhongliang/Documents/learnWebpack/mall/node_modules/babel-loader/lib/index.js!/Users/yuzhongliang/Documents/learnWebpack/mall/node_modules/eslint-loader/index.js??ref--13-0!/Users/yuzhongliang/Documents/learnWebpack/mall/src/store/actions.js","dependencies":[{"path":"/Users/yuzhongliang/Documents/learnWebpack/mall/src/store/actions.js","mtime":1599824878915},{"path":"/Users/yuzhongliang/Documents/learnWebpack/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuzhongliang/Documents/learnWebpack/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuzhongliang/Documents/learnWebpack/mall/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nexport default {\n  addCart: function addCart(context, payload) {\n    return new Promise(function (resolve, reject) {\n      var oldProduct = context.state.cartList.find(function (item) {\n        return item.iid === payload.iid;\n      });\n\n      if (oldProduct) {\n        context.commit('addCount', oldProduct);\n        resolve('aaa'); // oldProduct.count += 1\n      } else {\n        payload.count = 1;\n        context.commit('addToCart', payload);\n        resolve('bbb'); // state.cartList.push(payload)\n      }\n    });\n  }\n};",{"version":3,"sources":["/Users/yuzhongliang/Documents/learnWebpack/mall/src/store/actions.js"],"names":["addCart","context","payload","Promise","resolve","reject","oldProduct","state","cartList","find","item","iid","commit","count"],"mappings":";AAAA,eAAe;AACbA,EAAAA,OADa,mBACJC,OADI,EACKC,OADL,EACc;AACzB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAIC,UAAU,GAAGL,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBC,IAAvB,CAA4B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,GAAL,KAAaT,OAAO,CAACS,GAAzB;AAAA,OAAhC,CAAjB;;AACA,UAAIL,UAAJ,EAAgB;AACdL,QAAAA,OAAO,CAACW,MAAR,CAAe,UAAf,EAA2BN,UAA3B;AACAF,QAAAA,OAAO,CAAC,KAAD,CAAP,CAFc,CAGd;AACD,OAJD,MAIO;AACLF,QAAAA,OAAO,CAACW,KAAR,GAAgB,CAAhB;AACAZ,QAAAA,OAAO,CAACW,MAAR,CAAe,WAAf,EAA4BV,OAA5B;AACAE,QAAAA,OAAO,CAAC,KAAD,CAAP,CAHK,CAIL;AACD;AACF,KAZM,CAAP;AAaD;AAfY,CAAf","sourcesContent":["export default {\n  addCart (context, payload) {\n    return new Promise((resolve, reject) => {\n      let oldProduct = context.state.cartList.find(item => item.iid === payload.iid)\n      if (oldProduct) {\n        context.commit('addCount', oldProduct)\n        resolve('aaa')\n        // oldProduct.count += 1\n      } else {\n        payload.count = 1\n        context.commit('addToCart', payload)\n        resolve('bbb')\n        // state.cartList.push(payload)\n      }\n    })\n  }\n}\n"]}]}